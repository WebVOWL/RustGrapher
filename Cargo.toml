[package]
    authors=[
        "Alexander Neuh√§user <alexander.neuhaeuser@leafnova.net>",
        "TheRealMorgenfrue",
    ]
    description="Simulate and visualize a force directed graph"
    edition="2024"
    exclude=[
        ".github/*",
        ".vscode/*",
        "example_images/*",
        "examples/reference.json",
        "tools/*",
    ]
    keywords=[
        "force-directed-graph",
        "graph",
        "graphics",
        "simulation",
    ]
    license-file="LICENSE"
    name="grapher"
    readme="README.md"
    repository="https://github.com/WebVOWL/RustGrapher"
    version="0.3.2"

[lib]
    crate-type=["cdylib", "rlib"]

[dependencies]
    glam="0.29.0"
    glium={version="0.33", optional=true}
    petgraph="0.6.5"
    rand="0.8.5"
    rayon="1.10.0"
    winit={version="0.28.7", optional=true}

    [dependencies.bevy]
        default-features=false
        features=[
            "async_executor",     # Uses async-executor as a task execution backend.
            "bevy_core_pipeline", # Provides cameras and other basic render pipeline features.
            #"bevy_debug_stepping", # Enable stepping-based debugging of Bevy systems.
            "bevy_dev_tools", # Provides a collection of developer tools.
            "bevy_render",    # Provides rendering functionality.
            "bevy_state",     # Enable built in global state machines.
            "bevy_ui",        # A custom ECS-driven UI framework.
            #"bevy_ui_debug",       # Provides a debug overlay for bevy UI.
            #"critical-section",    # Provides the building blocks for synchronization primitives on all platforms, including no_std.
            "multi_threaded", # Enables parallelism in the engine. Disabling it forces all engine tasks to run on a single thread.
            "std",            # Allows access to the std crate.
            "sysinfo_plugin", # Enables system information diagnostic plugin
            "web",            # Enables use of browser APIs. Note this is currently only applicable on wasm32 architectures.
        ]
        optional=true
        version="0.16"

[dev-dependencies]
    criterion={version="0.5", features=["html_reports"]}
    petgraph-gen="0.1.3"
    serde={version="1.0", features=["derive"]}
    serde_json="1.0"

[features]
    desktop=["dep:glium", "dep:winit"]
    wasm=["dep:bevy"]

[[example]]
    name="wikipedia"
    path="examples/wikipedia.rs"

[[bench]]
    harness=false
    name="physics_bench"

[lints.clippy]
    derivable_impls="allow"
    new_without_default="allow"


# Default profile for devs, fast to compile, okay enough to run
[profile.dev]
    debug=true
    debug-assertions=true
    incremental=true
    lto=false
    opt-level=1
    overflow-checks=true
    panic="abort"

# This profile is used for production releases - compile time doesn't matter.
[profile.release]
    debug=false
    debug-assertions=false
    lto=true
    opt-level=3
    overflow-checks=false
    panic="abort"

# This profile is a production release with debug info.
# Used by developers to test and debug a production release
[profile.preview]
    debug=true
    inherits="release"

# Used for cargo bench
[profile.bench]
    incremental=true
    inherits="release"
